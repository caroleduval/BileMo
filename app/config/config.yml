imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

parameters:
    locale: fr
    fixtures_directory: '%kernel.project_dir%/src/AppBundle/Command/Fixtures'

framework:
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_rest:
    view:
        formats: { json: true, xml: false, rss: false }
        view_response_listener: true
    serializer:
        serialize_null: true
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    format_listener:
        rules:
            - { path: '^/', priorities: ['json'], fallback_format: 'json' }
    param_fetcher_listener: force
    exception:
        enabled: true
        codes:
            { AppBundle\Exception\ResourceValidationException: 400 }
        messages:
            { AppBundle\Exception\ResourceValidationException: true }
        exception_controller: 'fos_rest.exception.controller:showAction'
    routing_loader:
        default_format: json                            # All responses should be JSON formated
        include_format: false

sensio_framework_extra:
    request: { converters: true }
    view:
        annotations: true

fos_oauth_server:
    db_driver: orm
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode
    service:
        options:
            access_token_lifetime: 600000
            token_type: Bearer
        user_provider: user.provider

nelmio_api_doc:
    areas:
        path_patterns: # an array of regexps
            - ^/phones(?!/doc$)
            - ^/users(?!/doc$)
    documentation:
        info:
            title: BileMo API Documentation
            description: API for Phones Resources
            version: 1.0.0
        securityDefinitions:
            bearerAuth:
                type: oauth2
                description: provides a password flow access_token
                flow: password
                tokenUrl: /oauth/v2/token
                name: Authorization
        security:
            - bearerAuth: []

